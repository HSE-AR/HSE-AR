using System;
using System.Diagnostics;
using System.IO;
using System.Threading.Tasks;
using HseAr.Core.Settings;

namespace HseAr.BlenderService
{
    public class BlenderService : IBlenderService
    {
        private readonly Configuration _configuration;
        
        public BlenderService(Configuration configuration)
        {
            _configuration = configuration;
        }
        
        public async Task CreateFloorplanGltf(string imgPath, string newFloorplanGltfPath)
        { 
            var path = Directory.GetCurrentDirectory();
            var scriptDirectory = Path.Combine(Path.GetDirectoryName(path), "FloorplanToBlender3d");

            var pythonPath = _configuration.PythonPath;
            //var scriptDirectory = @"C:\Users\Alexander\Desktop\HSE-AR\Back\HseAr\HseAr.BlenderService\FloorplanToBlender3d";
            var scriptName = _configuration.BlenderScriptName;
            var blenderPath = _configuration.BlenderPath;


            var outputDirectory = newFloorplanGltfPath;
            var imagePath = imgPath;

            var scriptArguments = " -o " + outputDirectory;
            scriptArguments += " -i " + imagePath;
            scriptArguments += " -b " + blenderPath;

            var startInfo = new ProcessStartInfo();
            startInfo.FileName = pythonPath;
            startInfo.Arguments = string.Format("\"{0}\\{1}\" {2}", scriptDirectory, scriptName, scriptArguments);
            Console.WriteLine("Arguments: " + startInfo.Arguments);
            startInfo.UseShellExecute = false; // Do not use OS shell
            startInfo.CreateNoWindow = true; // We don't need new window
            startInfo.RedirectStandardOutput = true; // Any output, generated by application will be redirected back
            startInfo.RedirectStandardError = true; // Any error in standard output will be redirected back (for example exceptions)
            startInfo.WorkingDirectory = scriptDirectory;

            using (var process = Process.Start(startInfo))
            {
                using (var reader = process.StandardOutput)
                {
                    var stderr = process.StandardError.ReadToEnd(); // Here are the exceptions from our Python script
                    var result = reader.ReadToEnd(); // Here is the result of StdOut(for example: print "test")

                    process.WaitForExit();
                }
                
            }

        }
    }
}